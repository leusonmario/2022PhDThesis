Methods called,Number of times(Original),Number of times(Modified),Modified - Original,Percentage(Gain/Loss),Number of times(Original-Normalized),Number of times(Modified-Normalized),Modified - Original,Percentage(Gain/Loss)
"public rx.Subscription rx.Scheduler.schedulePeriodically(rx.util.functions.Action0|long|long|java.util.concurrent.TimeUnit)",1667,1801,134,"8.04%",0.10908258081402958,0.10781203232565101,-0.00127054848837857,"-1.16%"
"public void rx.concurrency.TestScheduler.settime(long)",11328,18211,6883,"60.76%",0.7412642324303101,1.0901526489075126,0.3488884164772025,"47.07%"
"public void rx.concurrency.TestScheduler.advanceTimeBy(long|java.util.concurrent.TimeUnit)",1669,1765,96,"5.75%",0.10921345373642194,0.10565698892547142,-0.0035564648109505242,"-3.26%"
"public java.util.Queue rx.concurrency.TestScheduler.getqueue()",11566,13600,2034,"17.59%",0.7568381101950007,0.8141275067345106,0.05728939653950993,"7.57%"
"public default java.util.Comparator java.util.Comparator.reversed()",23317,54171,30854,"132.32%",1.5257819657112943,3.2428015564202335,1.7170195907089392,"112.53%"
"public long rx.concurrency.TestScheduler.gettime()",9942,13986,4044,"40.68%",0.6505692972124067,0.8372343609697696,0.1866650637573628,"28.69%"
"public default java.util.Comparator java.util.Comparator.thenComparing(java.util.Comparator)",30391,18140,-12251,"-40.31%",1.988679492213061,1.0859024244238251,-0.9027770677892359,"-45.4%"
"public long rx.concurrency.TestScheduler.time",10269,10809,540,"5.26%",0.6719670200235571,0.647051780903921,-0.024915239119636112,"-3.71%"
"public final java.util.Queue rx.concurrency.TestScheduler.queue",17775,10151,-7624,"-42.89%",1.163133097762073,0.6076623765339718,-0.5554707212281013,"-47.76%"
"rx.concurrency.TestScheduler()",13925,15059,1134,"8.14%",0.9112027221567858,0.9014666267584556,-0.009736095398330202,"-1.07%"
"public void rx.concurrency.TestScheduler.triggerActions(long)",15157,11409,-3748,"-24.73%",0.9918204423504777,0.6829691709069141,-0.3088512714435636,"-31.14%"
"public void rx.concurrency.TestScheduler.triggerActions()",13560,19484,5924,"43.69%",0.8873184138201806,1.1663573780305299,0.27903896421034924,"31.45%"
"rx.concurrency.TestScheduler$CompareActionsByTime()",31671,19691,-11980,"-37.83%",2.0724381625441697,1.1787488775815624,-0.8936892849626072,"-43.12%"
"public void rx.concurrency.TestScheduler.advanceTimeTo(long|java.util.concurrent.TimeUnit)",1582,1729,147,"9.29%",0.1035204816123544,0.10350194552529182,-1.853608706257892e-05,"-0.02%"
"public long rx.concurrency.TestScheduler.now()",11674,13030,1356,"11.62%",0.7639052480041879,0.7800059862316672,0.01610073822747926,"2.11%"
"public rx.Subscription rx.Scheduler.schedule(rx.util.functions.Action0|long|java.util.concurrent.TimeUnit)",1633,1737,104,"6.37%",0.10685774113335951,0.10398084405866508,-0.0028768970746944345,"-2.69%"
"public rx.Subscription rx.Scheduler.schedule(rx.util.functions.Action0)",6657,10235,3578,"53.75%",0.43561052218296037,0.612690811134391,0.17708028895143058,"40.65%"
"public final native java.lang.Class java.lang.Object.getClass()",1557,1661,104,"6.68%",0.10188457008244994,0.09943130799161927,-0.002453262090830674,"-2.41%"
"java.lang.Object()",0,1,1,"INF%",0.0,5.986231667165519e-05,5.986231667165519e-05,"INF%"
